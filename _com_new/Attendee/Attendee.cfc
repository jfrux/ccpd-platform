<cfcomponent displayname="Attendee" output="false">	<!---	PROPERTIES	--->	<cfset variables.instance = StructNew() />	<!---	INITIALIZATION / CONFIGURATION	--->	<cffunction name="init" access="public" returntype="_com.Attendee.Attendee" output="false">		<cfargument name="AttendeeID" type="string" required="false" default="" />		<cfargument name="ActivityID" type="string" required="false" default="" />		<cfargument name="PersonID" type="string" required="false" default="" />		<cfargument name="StatusID" type="string" required="false" default="" />		<cfargument name="CheckedInFlag" type="string" required="false" default="" />		<cfargument name="CheckIn" type="string" required="false" default="" />		<cfargument name="CheckedOutFlag" type="string" required="false" default="" />		<cfargument name="CheckOut" type="string" required="false" default="" />		<cfargument name="MDflag" type="string" required="false" default="" />		<cfargument name="TermsFlag" type="string" required="false" default="" />		<cfargument name="PaymentFlag" type="string" required="false" default="" />		<cfargument name="PayAmount" type="string" required="false" default="" />		<cfargument name="PayOrderNo" type="string" required="false" default="" />		<cfargument name="PaymentDate" type="string" required="false" default="" />		<cfargument name="RegisterDate" type="string" required="false" default="" />		<cfargument name="CompleteDate" type="string" required="false" default="" />		<cfargument name="TermDate" type="string" required="false" default="" />		<cfargument name="firstName" type="string" required="false" default="" />		<cfargument name="middleName" type="string" required="false" default="" />		<cfargument name="lastName" type="string" required="false" default="" />		<cfargument name="email" type="string" required="false" default="" />		<cfargument name="certName" type="string" required="false" default="" />		<cfargument name="address1" type="string" required="false" default="" />		<cfargument name="address2" type="string" required="false" default="" />		<cfargument name="city" type="string" required="false" default="" />		<cfargument name="stateProvince" type="string" required="false" default="" />		<cfargument name="stateId" type="string" required="false" default="" />		<cfargument name="countryId" type="string" required="false" default="" />		<cfargument name="postalCode" type="string" required="false" default="" />		<cfargument name="phone1" type="string" required="false" default="" />		<cfargument name="phone1ext" type="string" required="false" default="" />		<cfargument name="phone2" type="string" required="false" default="" />		<cfargument name="phone2ext" type="string" required="false" default="" />		<cfargument name="fax" type="string" required="false" default="" />		<cfargument name="faxext" type="string" required="false" default="" />		<cfargument name="entryMethod" type="string" required="false" default="" />		<cfargument name="Created" type="string" required="false" default="" />		<cfargument name="CreatedBy" type="string" required="false" default="" />		<cfargument name="Updated" type="string" required="false" default="" />		<cfargument name="UpdatedBy" type="string" required="false" default="" />		<cfargument name="Deleted" type="string" required="false" default="" />		<cfargument name="DeletedFlag" type="string" required="false" default="" />				<!--- run setters --->		<cfset setAttendeeID(arguments.AttendeeID) />		<cfset setActivityID(arguments.ActivityID) />		<cfset setPersonID(arguments.PersonID) />		<cfset setStatusID(arguments.StatusID) />		<cfset setCheckedInFlag(arguments.CheckedInFlag) />		<cfset setCheckIn(arguments.CheckIn) />		<cfset setCheckedOutFlag(arguments.CheckedOutFlag) />		<cfset setCheckOut(arguments.CheckOut) />		<cfset setMDflag(arguments.MDflag) />		<cfset setTermsFlag(arguments.TermsFlag) />		<cfset setPaymentFlag(arguments.PaymentFlag) />		<cfset setPayAmount(arguments.PayAmount) />		<cfset setPayOrderNo(arguments.PayOrderNo) />		<cfset setPaymentDate(arguments.PaymentDate) />		<cfset setRegisterDate(arguments.RegisterDate) />		<cfset setCompleteDate(arguments.CompleteDate) />		<cfset setTermDate(arguments.TermDate) />		<cfset setfirstName(arguments.firstName) />		<cfset setmiddleName(arguments.middleName) />		<cfset setlastName(arguments.lastName) />		<cfset setemail(arguments.email) />		<cfset setcertName(arguments.certName) />		<cfset setaddress1(arguments.address1) />		<cfset setaddress2(arguments.address2) />		<cfset setcity(arguments.city) />		<cfset setstateProvince(arguments.stateProvince) />		<cfset setstateId(arguments.stateId) />		<cfset setcountryId(arguments.countryId) />		<cfset setpostalCode(arguments.postalCode) />		<cfset setphone1(arguments.phone1) />		<cfset setphone1ext(arguments.phone1ext) />		<cfset setphone2(arguments.phone2) />		<cfset setphone2ext(arguments.phone2ext) />		<cfset setfax(arguments.fax) />		<cfset setfaxext(arguments.faxext) />		<cfset setentryMethod(arguments.entryMethod) />		<cfset setCreated(arguments.Created) />		<cfset setCreatedBy(arguments.CreatedBy) />		<cfset setUpdated(arguments.Updated) />		<cfset setUpdatedBy(arguments.UpdatedBy) />		<cfset setDeleted(arguments.Deleted) />		<cfset setDeletedFlag(arguments.DeletedFlag) />				<cfreturn this /> 	</cffunction>	<!---	PUBLIC FUNCTIONS	--->	<cffunction name="setMemento" access="public" returntype="_com.Attendee.Attendee" output="false">		<cfargument name="memento" type="struct" required="yes"/>		<cfset variables.instance = arguments.memento />		<cfreturn this />	</cffunction>	<cffunction name="getMemento" access="public" returntype="struct" output="false" >		<cfreturn variables.instance />	</cffunction>	<cffunction name="validate" access="public" returntype="array" output="false">		<cfset var errors = arrayNew(1) />		<cfset var thisError = structNew() />				<!--- AttendeeID --->		<cfif (len(trim(getAttendeeID())) AND NOT isNumeric(trim(getAttendeeID())))>			<cfset thisError.field = "AttendeeID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "AttendeeID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- ActivityID --->		<cfif (NOT len(trim(getActivityID())))>			<cfset thisError.field = "ActivityID" />			<cfset thisError.type = "required" />			<cfset thisError.message = "ActivityID is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getActivityID())) AND NOT isNumeric(trim(getActivityID())))>			<cfset thisError.field = "ActivityID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "ActivityID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- PersonID --->		<cfif (NOT len(trim(getPersonID())))>			<cfset thisError.field = "PersonID" />			<cfset thisError.type = "required" />			<cfset thisError.message = "PersonID is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getPersonID())) AND NOT isNumeric(trim(getPersonID())))>			<cfset thisError.field = "PersonID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "PersonID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- StatusID --->		<cfif (len(trim(getStatusID())) AND NOT isNumeric(trim(getStatusID())))>			<cfset thisError.field = "StatusID" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "StatusID is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CheckedInFlag --->		<cfif (len(trim(getCheckedInFlag())) AND NOT IsSimpleValue(trim(getCheckedInFlag())))>			<cfset thisError.field = "CheckedInFlag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CheckedInFlag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getCheckedInFlag())) GT 1)>			<cfset thisError.field = "CheckedInFlag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "CheckedInFlag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CheckIn --->		<cfif (len(trim(getCheckIn())) AND NOT isDate(trim(getCheckIn())))>			<cfset thisError.field = "CheckIn" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CheckIn is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CheckedOutFlag --->		<cfif (len(trim(getCheckedOutFlag())) AND NOT IsSimpleValue(trim(getCheckedOutFlag())))>			<cfset thisError.field = "CheckedOutFlag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CheckedOutFlag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getCheckedOutFlag())) GT 1)>			<cfset thisError.field = "CheckedOutFlag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "CheckedOutFlag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CheckOut --->		<cfif (len(trim(getCheckOut())) AND NOT isDate(trim(getCheckOut())))>			<cfset thisError.field = "CheckOut" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CheckOut is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- MDflag --->		<cfif (len(trim(getMDflag())) AND NOT IsSimpleValue(trim(getMDflag())))>			<cfset thisError.field = "MDflag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "MDflag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getMDflag())) GT 1)>			<cfset thisError.field = "MDflag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "MDflag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- TermsFlag --->		<cfif (len(trim(getTermsFlag())) AND NOT IsSimpleValue(trim(getTermsFlag())))>			<cfset thisError.field = "TermsFlag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "TermsFlag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getTermsFlag())) GT 1)>			<cfset thisError.field = "TermsFlag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "TermsFlag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- PaymentFlag --->		<cfif (len(trim(getPaymentFlag())) AND NOT IsSimpleValue(trim(getPaymentFlag())))>			<cfset thisError.field = "PaymentFlag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "PaymentFlag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getPaymentFlag())) GT 1)>			<cfset thisError.field = "PaymentFlag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "PaymentFlag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- PayAmount --->		<cfif (len(trim(getPayAmount())) AND NOT isNumeric(trim(getPayAmount())))>			<cfset thisError.field = "PayAmount" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "PayAmount is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- PayOrderNo --->		<cfif (len(trim(getPayOrderNo())) AND NOT IsSimpleValue(trim(getPayOrderNo())))>			<cfset thisError.field = "PayOrderNo" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "PayOrderNo is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getPayOrderNo())) GT 50)>			<cfset thisError.field = "PayOrderNo" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "PayOrderNo is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- PaymentDate --->		<cfif (len(trim(getPaymentDate())) AND NOT isDate(trim(getPaymentDate())))>			<cfset thisError.field = "PaymentDate" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "PaymentDate is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- RegisterDate --->		<cfif (len(trim(getRegisterDate())) AND NOT isDate(trim(getRegisterDate())))>			<cfset thisError.field = "RegisterDate" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "RegisterDate is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CompleteDate --->		<cfif (len(trim(getCompleteDate())) AND NOT isDate(trim(getCompleteDate())))>			<cfset thisError.field = "CompleteDate" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CompleteDate is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- TermDate --->		<cfif (len(trim(getTermDate())) AND NOT isDate(trim(getTermDate())))>			<cfset thisError.field = "TermDate" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "TermDate is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- firstName --->		<cfif (len(trim(getfirstName())) AND NOT IsSimpleValue(trim(getfirstName())))>			<cfset thisError.field = "firstName" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "firstName is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getfirstName())) GT 100)>			<cfset thisError.field = "firstName" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "firstName is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- middleName --->		<cfif (len(trim(getmiddleName())) AND NOT IsSimpleValue(trim(getmiddleName())))>			<cfset thisError.field = "middleName" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "middleName is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getmiddleName())) GT 100)>			<cfset thisError.field = "middleName" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "middleName is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- lastName --->		<cfif (len(trim(getlastName())) AND NOT IsSimpleValue(trim(getlastName())))>			<cfset thisError.field = "lastName" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "lastName is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getlastName())) GT 100)>			<cfset thisError.field = "lastName" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "lastName is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- email --->		<cfif (len(trim(getemail())) AND NOT IsSimpleValue(trim(getemail())))>			<cfset thisError.field = "email" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "email is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getemail())) GT 150)>			<cfset thisError.field = "email" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "email is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- certName --->		<cfif (len(trim(getcertName())) AND NOT IsSimpleValue(trim(getcertName())))>			<cfset thisError.field = "certName" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "certName is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getcertName())) GT 225)>			<cfset thisError.field = "certName" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "certName is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- address1 --->		<cfif (len(trim(getaddress1())) AND NOT IsSimpleValue(trim(getaddress1())))>			<cfset thisError.field = "address1" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "address1 is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getaddress1())) GT 200)>			<cfset thisError.field = "address1" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "address1 is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- address2 --->		<cfif (len(trim(getaddress2())) AND NOT IsSimpleValue(trim(getaddress2())))>			<cfset thisError.field = "address2" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "address2 is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getaddress2())) GT 200)>			<cfset thisError.field = "address2" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "address2 is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- city --->		<cfif (len(trim(getcity())) AND NOT IsSimpleValue(trim(getcity())))>			<cfset thisError.field = "city" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "city is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getcity())) GT 100)>			<cfset thisError.field = "city" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "city is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- stateProvince --->		<cfif (len(trim(getstateProvince())) AND NOT IsSimpleValue(trim(getstateProvince())))>			<cfset thisError.field = "stateProvince" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "stateProvince is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getstateProvince())) GT 150)>			<cfset thisError.field = "stateProvince" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "stateProvince is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- stateId --->		<cfif (len(trim(getstateId())) AND NOT isNumeric(trim(getstateId())))>			<cfset thisError.field = "stateId" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "stateId is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- countryId --->		<cfif (len(trim(getcountryId())) AND NOT isNumeric(trim(getcountryId())))>			<cfset thisError.field = "countryId" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "countryId is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- postalCode --->		<cfif (len(trim(getpostalCode())) AND NOT IsSimpleValue(trim(getpostalCode())))>			<cfset thisError.field = "postalCode" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "postalCode is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getpostalCode())) GT 15)>			<cfset thisError.field = "postalCode" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "postalCode is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- phone1 --->		<cfif (len(trim(getphone1())) AND NOT IsSimpleValue(trim(getphone1())))>			<cfset thisError.field = "phone1" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "phone1 is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getphone1())) GT 50)>			<cfset thisError.field = "phone1" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "phone1 is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- phone1ext --->		<cfif (len(trim(getphone1ext())) AND NOT IsSimpleValue(trim(getphone1ext())))>			<cfset thisError.field = "phone1ext" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "phone1ext is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getphone1ext())) GT 15)>			<cfset thisError.field = "phone1ext" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "phone1ext is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- phone2 --->		<cfif (len(trim(getphone2())) AND NOT IsSimpleValue(trim(getphone2())))>			<cfset thisError.field = "phone2" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "phone2 is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getphone2())) GT 50)>			<cfset thisError.field = "phone2" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "phone2 is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- phone2ext --->		<cfif (len(trim(getphone2ext())) AND NOT IsSimpleValue(trim(getphone2ext())))>			<cfset thisError.field = "phone2ext" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "phone2ext is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getphone2ext())) GT 15)>			<cfset thisError.field = "phone2ext" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "phone2ext is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- fax --->		<cfif (len(trim(getfax())) AND NOT IsSimpleValue(trim(getfax())))>			<cfset thisError.field = "fax" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "fax is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getfax())) GT 50)>			<cfset thisError.field = "fax" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "fax is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- faxext --->		<cfif (len(trim(getfaxext())) AND NOT IsSimpleValue(trim(getfaxext())))>			<cfset thisError.field = "faxext" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "faxext is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getfaxext())) GT 15)>			<cfset thisError.field = "faxext" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "faxext is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- entryMethod --->		<cfif (len(trim(getentryMethod())) AND NOT IsSimpleValue(trim(getentryMethod())))>			<cfset thisError.field = "entryMethod" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "entryMethod is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getentryMethod())) GT 50)>			<cfset thisError.field = "entryMethod" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "entryMethod is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- Created --->		<cfif (len(trim(getCreated())) AND NOT isDate(trim(getCreated())))>			<cfset thisError.field = "Created" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "Created is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- CreatedBy --->		<cfif (NOT len(trim(getCreatedBy())))>			<cfset thisError.field = "CreatedBy" />			<cfset thisError.type = "required" />			<cfset thisError.message = "CreatedBy is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getCreatedBy())) AND NOT isNumeric(trim(getCreatedBy())))>			<cfset thisError.field = "CreatedBy" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "CreatedBy is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- Updated --->		<cfif (len(trim(getUpdated())) AND NOT isDate(trim(getUpdated())))>			<cfset thisError.field = "Updated" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "Updated is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- UpdatedBy --->		<cfif (len(trim(getUpdatedBy())) AND NOT isNumeric(trim(getUpdatedBy())))>			<cfset thisError.field = "UpdatedBy" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "UpdatedBy is not numeric" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- Deleted --->		<cfif (len(trim(getDeleted())) AND NOT isDate(trim(getDeleted())))>			<cfset thisError.field = "Deleted" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "Deleted is not a date" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- DeletedFlag --->		<cfif (len(trim(getDeletedFlag())) AND NOT IsSimpleValue(trim(getDeletedFlag())))>			<cfset thisError.field = "DeletedFlag" />			<cfset thisError.type = "invalidType" />			<cfset thisError.message = "DeletedFlag is not a string" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>		<cfif (len(trim(getDeletedFlag())) GT 1)>			<cfset thisError.field = "DeletedFlag" />			<cfset thisError.type = "tooLong" />			<cfset thisError.message = "DeletedFlag is too long" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<cfreturn errors />	</cffunction>	<!---	ACCESSORS	--->	<cffunction name="setAttendeeID" access="public" returntype="void" output="false">		<cfargument name="AttendeeID" type="string" required="true" />		<cfset variables.instance.AttendeeID = arguments.AttendeeID />	</cffunction>	<cffunction name="getAttendeeID" access="public" returntype="string" output="false">		<cfreturn variables.instance.AttendeeID />	</cffunction>	<cffunction name="setActivityID" access="public" returntype="void" output="false">		<cfargument name="ActivityID" type="string" required="true" />		<cfset variables.instance.ActivityID = arguments.ActivityID />	</cffunction>	<cffunction name="getActivityID" access="public" returntype="string" output="false">		<cfreturn variables.instance.ActivityID />	</cffunction>	<cffunction name="setPersonID" access="public" returntype="void" output="false">		<cfargument name="PersonID" type="string" required="true" />		<cfset variables.instance.PersonID = arguments.PersonID />	</cffunction>	<cffunction name="getPersonID" access="public" returntype="string" output="false">		<cfreturn variables.instance.PersonID />	</cffunction>	<cffunction name="setStatusID" access="public" returntype="void" output="false">		<cfargument name="StatusID" type="string" required="true" />		<cfset variables.instance.StatusID = arguments.StatusID />	</cffunction>	<cffunction name="getStatusID" access="public" returntype="string" output="false">		<cfreturn variables.instance.StatusID />	</cffunction>	<cffunction name="setCheckedInFlag" access="public" returntype="void" output="false">		<cfargument name="CheckedInFlag" type="string" required="true" />		<cfset variables.instance.CheckedInFlag = arguments.CheckedInFlag />	</cffunction>	<cffunction name="getCheckedInFlag" access="public" returntype="string" output="false">		<cfreturn variables.instance.CheckedInFlag />	</cffunction>	<cffunction name="setCheckIn" access="public" returntype="void" output="false">		<cfargument name="CheckIn" type="string" required="true" />		<cfset variables.instance.CheckIn = arguments.CheckIn />	</cffunction>	<cffunction name="getCheckIn" access="public" returntype="string" output="false">		<cfreturn variables.instance.CheckIn />	</cffunction>	<cffunction name="setCheckedOutFlag" access="public" returntype="void" output="false">		<cfargument name="CheckedOutFlag" type="string" required="true" />		<cfset variables.instance.CheckedOutFlag = arguments.CheckedOutFlag />	</cffunction>	<cffunction name="getCheckedOutFlag" access="public" returntype="string" output="false">		<cfreturn variables.instance.CheckedOutFlag />	</cffunction>	<cffunction name="setCheckOut" access="public" returntype="void" output="false">		<cfargument name="CheckOut" type="string" required="true" />		<cfset variables.instance.CheckOut = arguments.CheckOut />	</cffunction>	<cffunction name="getCheckOut" access="public" returntype="string" output="false">		<cfreturn variables.instance.CheckOut />	</cffunction>	<cffunction name="setMDflag" access="public" returntype="void" output="false">		<cfargument name="MDflag" type="string" required="true" />		<cfset variables.instance.MDflag = arguments.MDflag />	</cffunction>	<cffunction name="getMDflag" access="public" returntype="string" output="false">		<cfreturn variables.instance.MDflag />	</cffunction>	<cffunction name="setTermsFlag" access="public" returntype="void" output="false">		<cfargument name="TermsFlag" type="string" required="true" />		<cfset variables.instance.TermsFlag = arguments.TermsFlag />	</cffunction>	<cffunction name="getTermsFlag" access="public" returntype="string" output="false">		<cfreturn variables.instance.TermsFlag />	</cffunction>	<cffunction name="setPaymentFlag" access="public" returntype="void" output="false">		<cfargument name="PaymentFlag" type="string" required="true" />		<cfset variables.instance.PaymentFlag = arguments.PaymentFlag />	</cffunction>	<cffunction name="getPaymentFlag" access="public" returntype="string" output="false">		<cfreturn variables.instance.PaymentFlag />	</cffunction>	<cffunction name="setPayAmount" access="public" returntype="void" output="false">		<cfargument name="PayAmount" type="string" required="true" />		<cfset variables.instance.PayAmount = arguments.PayAmount />	</cffunction>	<cffunction name="getPayAmount" access="public" returntype="string" output="false">		<cfreturn variables.instance.PayAmount />	</cffunction>	<cffunction name="setPayOrderNo" access="public" returntype="void" output="false">		<cfargument name="PayOrderNo" type="string" required="true" />		<cfset variables.instance.PayOrderNo = arguments.PayOrderNo />	</cffunction>	<cffunction name="getPayOrderNo" access="public" returntype="string" output="false">		<cfreturn variables.instance.PayOrderNo />	</cffunction>	<cffunction name="setPaymentDate" access="public" returntype="void" output="false">		<cfargument name="PaymentDate" type="string" required="true" />		<cfset variables.instance.PaymentDate = arguments.PaymentDate />	</cffunction>	<cffunction name="getPaymentDate" access="public" returntype="string" output="false">		<cfreturn variables.instance.PaymentDate />	</cffunction>	<cffunction name="setRegisterDate" access="public" returntype="void" output="false">		<cfargument name="RegisterDate" type="string" required="true" />		<cfset variables.instance.RegisterDate = arguments.RegisterDate />	</cffunction>	<cffunction name="getRegisterDate" access="public" returntype="string" output="false">		<cfreturn variables.instance.RegisterDate />	</cffunction>	<cffunction name="setCompleteDate" access="public" returntype="void" output="false">		<cfargument name="CompleteDate" type="string" required="true" />		<cfset variables.instance.CompleteDate = arguments.CompleteDate />	</cffunction>	<cffunction name="getCompleteDate" access="public" returntype="string" output="false">		<cfreturn variables.instance.CompleteDate />	</cffunction>	<cffunction name="setTermDate" access="public" returntype="void" output="false">		<cfargument name="TermDate" type="string" required="true" />		<cfset variables.instance.TermDate = arguments.TermDate />	</cffunction>	<cffunction name="getTermDate" access="public" returntype="string" output="false">		<cfreturn variables.instance.TermDate />	</cffunction>	<cffunction name="setfirstName" access="public" returntype="void" output="false">		<cfargument name="firstName" type="string" required="true" />		<cfset variables.instance.firstName = arguments.firstName />	</cffunction>	<cffunction name="getfirstName" access="public" returntype="string" output="false">		<cfreturn variables.instance.firstName />	</cffunction>	<cffunction name="setmiddleName" access="public" returntype="void" output="false">		<cfargument name="middleName" type="string" required="true" />		<cfset variables.instance.middleName = arguments.middleName />	</cffunction>	<cffunction name="getmiddleName" access="public" returntype="string" output="false">		<cfreturn variables.instance.middleName />	</cffunction>	<cffunction name="setlastName" access="public" returntype="void" output="false">		<cfargument name="lastName" type="string" required="true" />		<cfset variables.instance.lastName = arguments.lastName />	</cffunction>	<cffunction name="getlastName" access="public" returntype="string" output="false">		<cfreturn variables.instance.lastName />	</cffunction>	<cffunction name="setemail" access="public" returntype="void" output="false">		<cfargument name="email" type="string" required="true" />		<cfset variables.instance.email = arguments.email />	</cffunction>	<cffunction name="getemail" access="public" returntype="string" output="false">		<cfreturn variables.instance.email />	</cffunction>	<cffunction name="setcertName" access="public" returntype="void" output="false">		<cfargument name="certName" type="string" required="true" />		<cfset variables.instance.certName = arguments.certName />	</cffunction>	<cffunction name="getcertName" access="public" returntype="string" output="false">		<cfreturn variables.instance.certName />	</cffunction>	<cffunction name="setaddress1" access="public" returntype="void" output="false">		<cfargument name="address1" type="string" required="true" />		<cfset variables.instance.address1 = arguments.address1 />	</cffunction>	<cffunction name="getaddress1" access="public" returntype="string" output="false">		<cfreturn variables.instance.address1 />	</cffunction>	<cffunction name="setaddress2" access="public" returntype="void" output="false">		<cfargument name="address2" type="string" required="true" />		<cfset variables.instance.address2 = arguments.address2 />	</cffunction>	<cffunction name="getaddress2" access="public" returntype="string" output="false">		<cfreturn variables.instance.address2 />	</cffunction>	<cffunction name="setcity" access="public" returntype="void" output="false">		<cfargument name="city" type="string" required="true" />		<cfset variables.instance.city = arguments.city />	</cffunction>	<cffunction name="getcity" access="public" returntype="string" output="false">		<cfreturn variables.instance.city />	</cffunction>	<cffunction name="setstateProvince" access="public" returntype="void" output="false">		<cfargument name="stateProvince" type="string" required="true" />		<cfset variables.instance.stateProvince = arguments.stateProvince />	</cffunction>	<cffunction name="getstateProvince" access="public" returntype="string" output="false">		<cfreturn variables.instance.stateProvince />	</cffunction>	<cffunction name="setstateId" access="public" returntype="void" output="false">		<cfargument name="stateId" type="string" required="true" />		<cfset variables.instance.stateId = arguments.stateId />	</cffunction>	<cffunction name="getstateId" access="public" returntype="string" output="false">		<cfreturn variables.instance.stateId />	</cffunction>	<cffunction name="setcountryId" access="public" returntype="void" output="false">		<cfargument name="countryId" type="string" required="true" />		<cfset variables.instance.countryId = arguments.countryId />	</cffunction>	<cffunction name="getcountryId" access="public" returntype="string" output="false">		<cfreturn variables.instance.countryId />	</cffunction>	<cffunction name="setpostalCode" access="public" returntype="void" output="false">		<cfargument name="postalCode" type="string" required="true" />		<cfset variables.instance.postalCode = arguments.postalCode />	</cffunction>	<cffunction name="getpostalCode" access="public" returntype="string" output="false">		<cfreturn variables.instance.postalCode />	</cffunction>	<cffunction name="setphone1" access="public" returntype="void" output="false">		<cfargument name="phone1" type="string" required="true" />		<cfset variables.instance.phone1 = arguments.phone1 />	</cffunction>	<cffunction name="getphone1" access="public" returntype="string" output="false">		<cfreturn variables.instance.phone1 />	</cffunction>	<cffunction name="setphone1ext" access="public" returntype="void" output="false">		<cfargument name="phone1ext" type="string" required="true" />		<cfset variables.instance.phone1ext = arguments.phone1ext />	</cffunction>	<cffunction name="getphone1ext" access="public" returntype="string" output="false">		<cfreturn variables.instance.phone1ext />	</cffunction>	<cffunction name="setphone2" access="public" returntype="void" output="false">		<cfargument name="phone2" type="string" required="true" />		<cfset variables.instance.phone2 = arguments.phone2 />	</cffunction>	<cffunction name="getphone2" access="public" returntype="string" output="false">		<cfreturn variables.instance.phone2 />	</cffunction>	<cffunction name="setphone2ext" access="public" returntype="void" output="false">		<cfargument name="phone2ext" type="string" required="true" />		<cfset variables.instance.phone2ext = arguments.phone2ext />	</cffunction>	<cffunction name="getphone2ext" access="public" returntype="string" output="false">		<cfreturn variables.instance.phone2ext />	</cffunction>	<cffunction name="setfax" access="public" returntype="void" output="false">		<cfargument name="fax" type="string" required="true" />		<cfset variables.instance.fax = arguments.fax />	</cffunction>	<cffunction name="getfax" access="public" returntype="string" output="false">		<cfreturn variables.instance.fax />	</cffunction>	<cffunction name="setfaxext" access="public" returntype="void" output="false">		<cfargument name="faxext" type="string" required="true" />		<cfset variables.instance.faxext = arguments.faxext />	</cffunction>	<cffunction name="getfaxext" access="public" returntype="string" output="false">		<cfreturn variables.instance.faxext />	</cffunction>	<cffunction name="setentryMethod" access="public" returntype="void" output="false">		<cfargument name="entryMethod" type="string" required="true" />		<cfset variables.instance.entryMethod = arguments.entryMethod />	</cffunction>	<cffunction name="getentryMethod" access="public" returntype="string" output="false">		<cfreturn variables.instance.entryMethod />	</cffunction>	<cffunction name="setCreated" access="public" returntype="void" output="false">		<cfargument name="Created" type="string" required="true" />		<cfset variables.instance.Created = arguments.Created />	</cffunction>	<cffunction name="getCreated" access="public" returntype="string" output="false">		<cfreturn variables.instance.Created />	</cffunction>	<cffunction name="setCreatedBy" access="public" returntype="void" output="false">		<cfargument name="CreatedBy" type="string" required="true" />		<cfset variables.instance.CreatedBy = arguments.CreatedBy />	</cffunction>	<cffunction name="getCreatedBy" access="public" returntype="string" output="false">		<cfreturn variables.instance.CreatedBy />	</cffunction>	<cffunction name="setUpdated" access="public" returntype="void" output="false">		<cfargument name="Updated" type="string" required="true" />		<cfset variables.instance.Updated = arguments.Updated />	</cffunction>	<cffunction name="getUpdated" access="public" returntype="string" output="false">		<cfreturn variables.instance.Updated />	</cffunction>	<cffunction name="setUpdatedBy" access="public" returntype="void" output="false">		<cfargument name="UpdatedBy" type="string" required="true" />		<cfset variables.instance.UpdatedBy = arguments.UpdatedBy />	</cffunction>	<cffunction name="getUpdatedBy" access="public" returntype="string" output="false">		<cfreturn variables.instance.UpdatedBy />	</cffunction>	<cffunction name="setDeleted" access="public" returntype="void" output="false">		<cfargument name="Deleted" type="string" required="true" />		<cfset variables.instance.Deleted = arguments.Deleted />	</cffunction>	<cffunction name="getDeleted" access="public" returntype="string" output="false">		<cfreturn variables.instance.Deleted />	</cffunction>	<cffunction name="setDeletedFlag" access="public" returntype="void" output="false">		<cfargument name="DeletedFlag" type="string" required="true" />		<cfset variables.instance.DeletedFlag = arguments.DeletedFlag />	</cffunction>	<cffunction name="getDeletedFlag" access="public" returntype="string" output="false">		<cfreturn variables.instance.DeletedFlag />	</cffunction>	<!---	DUMP	--->	<cffunction name="dump" access="public" output="true" return="void">		<cfargument name="abort" type="boolean" default="false" />		<cfdump var="#variables.instance#" />		<cfif arguments.abort>			<cfabort />		</cfif>	</cffunction></cfcomponent>
