###!
* PERSON
###
App.module "Person",(Person,App,Backbone,Marionette) ->
    @startWithParent = false

    cShowInfobar = null
    $profile = null
    $projectBar = null
    $contentArea = null
    $infoBar = null
    $infoBarToggler = null
    $contentToggleSpan = null
    $infoBarToggleSpan = null
    $statusChanger = null
    $statusIcon = null
    $statusBox = null
    $menuBar = null
    defaultFolders = null
    statusIcons =
      "0":"exclamation-circle"
      "1":"light-bulb"
      "2":"hourglass"
      "3":"light-bulb-off"
      "4":"cross"

    Person.on "before:start", ->
      App.logInfo "starting: #{Person.moduleName}"
      return

    Person.on "start", (options) ->
      $(document).ready ->
        _init(options)
        App.logInfo "started: #{Person.moduleName}"
      return

    Person.on "stop", ->
      App.logInfo "stopped: #{Person.moduleName}"
      return
    
    Person.on "status.changeStart", (status) ->
      $statusChanger.addClass('disabled')
      return

    Person.on "status.changeEnd", (status) ->
      $statusChanger.removeClass('disabled')
      addMessage "Status changed successfully!", 250, 6000, 4000
      $statusIcon.attr('class','').addClass('fg-' + statusIcons[status])
      $statusBox.addClass('activity-status-' + status)
    
    class Model extends Backbone.Model
      url: '/api/person/getPerson'

    class InfobarView extends App.Views.HubInfobarView

    class LinkbarView extends App.Views.HubLinkbarView

    class PersonView extends App.Views.HubView
      el: ".hub .person"
      InfobarView:InfobarView
      LinkbarView:LinkbarView
      type:'person'
      initialize: ->
        super

    Person._init = _init = (settings) ->
      Person.model = new Model(settings.model)

      @hubView = new PersonView
        model:Person.model
        linkbarCollection:new App.Collections.LinkbarCollection(settings.linkbarSettings.tabArray)
        el:'.hub'

      $profile = $(".profile")
      $infoBar = $(".js-infobar")
      $projectBar = $(".js-projectbar")
      $menuBar = $(".js-profile-menu > div > div > ul")
      $contentArea = $(".js-profile-content")
      $contentToggleSpan = $(".js-content-toggle")
      $menuLinks = $menuBar.find('a')
      $statusBox = $(".js-activity-status")
      $statusChanger = $statusBox.find('select')
      $statusIcon = $("<i></i>").addClass('fg-exclamation-circle')
      $statusBox.append($statusIcon)

      # STATUS CHANGER 
      $statusChanger.change ->
        Person.trigger('status.changeStart')
        nStatus = $(this).val()
        if nStatus is ""
          addError "You must select a status.", 250, 6000, 4000
          return false

        setStatus nStatus
        return

      $statusIcon.attr('class','').addClass('fg-' + statusIcons[$statusChanger.val()])
      # // END STATUS CHANGER 
      
      # DIALOG WINDOWS
      updateAll()

      # Authority Level Changer 
      $("#AuthLevel").change ->
        $.getJSON sRootPath + "/_com/AJAX_Person.cfc",
          method: "setAuthLevel"
          AccountID: nAccount
          AuthorityID: $(this).val()
          returnFormat: "plain"
        , (data) ->
          if data.STATUS
            addMessage data.STATUSMSG, 250, 6000, 4000
          else
            addError data.STATUSMSG, 250, 6000, 4000



      # Status Changer 
      $("#StatusChanger").change ->
        $.getJSON sRootPath + "/_com/AJAX_Person.cfc",
          method: "setStatus"
          PersonID: nPerson
          StatusID: $(this).val()
          returnFormat: "plain"
        , (data) ->
          if data.STATUS
            addMessage data.STATUSMSG, 250, 6000, 4000
          else
            addError data.STATUSMSG, 250, 6000, 4000

      # CREDENTIALS DIALOG 
      $("#CredentialsContainer").dialog
        title: "Credentials"
        modal: false
        autoOpen: false
        height: 325
        width: 450
        resizable: false
        draggable:false
        buttons:
          Save: ->
            sPass = $("#NewPassword").val()
            sConPass = $("#ConfirmPassword").val()
            $.getJSON sRootPath + "/_com/AJAX_Person.cfc",
              method: "saveCredentials"
              PersonID: nPerson
              Pass: sPass
              ConPass: sConPass
            , (data) ->
              if data.STATUS
                addMessage data.STATUSMSG, 250, 6000, 4000
                $("#CredentialsContainer").dialog "close"
                $("#NewPassword").val ""
                $("#ConfirmPassword").val ""
              else
                if $.ArrayLen(data.ERRORS) > 0
                  $.each data.ERRORS, (i, item) ->
                    addError item.MESSAGE, 250, 6000, 4000

                else
                  addError data.STATUSMSG, 250, 6000, 4000


          Close: ->
            $("#CredentialsContainer").dialog "close"
            $("#CredentialsContainer").html ""

        open: ->
          $.post sMyPerson + "Person.Credentials",
            PersonID: nPerson
          , (data) ->
            $("#CredentialsContainer").html data

          $("#CredentialsDialogLink").fadeOut()

        close: ->
          $("#CredentialsDialogLink").fadeIn()

      $("#CredentialsDialogLink").click ->
        $("#CredentialsContainer").dialog "open"


      # // END CREDENTIALS DIALOG 

      # START DELETE PERSON 
      $("#DeletePersonLink").click ->
        sReason = prompt("Do you really want to delete " + sPersonName + "?  What is the reason?", "")
        if sReason? and sReason isnt ""
          $.getJSON sRootPath + "/_com/AJAX_Person.cfc",
            method: "deletePerson"
            PersonID: nPerson
            Reason: sReason
            returnFormat: "plain"
          , (data) ->
            if data.STATUS
              window.location = sMyPerson + "Person.Home?Message=" + data.STATUSMSG
            else
              addError data.STATUSMSG, 250, 6000, 4000

        else
          addError "Please provide a reason.", 250, 6000, 4000
        return
      # END DELETE PERSON 
      return

    setStatus = Person.setStatus = (status) ->
      $.ajax
        url: sRootPath + "/_com/AJAX_Activity.cfc"
        type:'post'
        data:
          method: "updateActivityStatus"
          ActivityID: nActivity
          StatusID: status
          returnFormat: "plain"
        success: (data) ->
          cleanData = $.trim(data)
          Person.trigger('status.changeEnd',status)
          return
      return

    updateAll = ->
      return
    updateActions = ->
      return
    updateAccountID = (sAccountID) ->
      $("#AccountID").html sAccountID
      return
    return